
name: EShop UI

on:
# commenting branch push trigger
 # push:
  #  branches: [ "main" ]
  #pull_request:
   # branches: [ "main" ]
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3   # checkout main repo branch
    
    #install .NET 6 on runner
    - name: Setup .NET 6 
      uses: actions/setup-dotnet@v3
      with:
       dotnet-version: 6.0.x
       
       # restoring the dependencies of KamilCatalog API project.
    - name: Restore dependencies
      run: dotnet restore "EshopUI/EshopUI.csproj"  # restore EshopUI  project
    
    # building the project
    - name: Build
      run: dotnet build "EshopUI/EshopUI.csproj" --no-restore  # build catalog api project
      
    # publish the project inside runner : working code
    - name: Publish
      run: dotnet publish EshopUI/EshopUI.csproj -c Release -o publish/EshopUI   # publishes build artifact into publish/EshopUI folder on hosted runner
    
    - name: Azure WebApp Deployment
      uses: Azure/webapps-deploy@v2.2.6
      with: 
    # Name of the Azure Web App
    app-name: kamil-eshop-ui
    # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
    publish-profile: # optional
    # Enter an existing Slot other than the Production slot
    slot-name: # optional, default is production
    # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
    package: # optional, default is .
    # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
    images: 
    # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
    configuration-file: # optional
    # Enter the start up command. For ex. dotnet run or dotnet run
    startup-command: # optional
    # Enter the resource group name of the web app
    resource-group-name: # optional
   
