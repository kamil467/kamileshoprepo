
name: EShop UI

on:
# commenting branch push trigger
 # push:
  #  branches: [ "main" ]
  #pull_request:
   # branches: [ "main" ]
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    # Checkout
    - name: Checkout Main Branch 
      uses: actions/checkout@v3   # checkout main repo branch
    
    #install .NET 6 on runner
    - name: Setup .NET 6 
      uses: actions/setup-dotnet@v3
      with:
       dotnet-version: 6.0.x
       
       # restoring the dependencies of KamilCatalog API project.
    - name: Restore dependencies
      run: dotnet restore "EshopUI/EshopUI.csproj"  # restore EshopUI  project
    
    # building the project
    - name: Build
      run: dotnet build "EshopUI/EshopUI.csproj" --no-restore  # build catalog api project
      
    # publish the project inside runner : working code
    - name: Publish
      run: dotnet publish EshopUI/EshopUI.csproj -c Release -o publish/EshopUI   # publishes build artifact into publish/EshopUI folder on hosted runner
    
    # upload a build artifact to folder inside runner
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
       name: eshopui
    # A file, directory or wildcard pattern that describes what to upload
       path: publish/EshopUI
    # The desired behavior if no files are found using the provided path.
        #Available Options:
         # warn: Output a warning but do not fail the action
          #error: Fail the action with an error message
          #ignore: Do not output any warnings or errors, the action does not fail

       # if-no-files-found: error
    # Duration after which artifact will expire in days. 0 means using default retention.
    # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

        # retention-days:  0
    
  

    - name: Azure WebApp Deployment
      uses: Azure/webapps-deploy@v2.2.6
      with: 
    # Name of the Azure Web App
        app-name: kamil-eshop-ui
    # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{secrets.AZURE_WEBAPP_PUBLISH_PROFILE}}
    # Enter an existing Slot other than the Production slot
    # slot-name: # optional, default is production
    # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: publish/EshopUI
   

   
